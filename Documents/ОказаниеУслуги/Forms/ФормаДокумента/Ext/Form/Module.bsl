
&НаКлиенте
Процедура ПереченьНоменклатурыКоличествоПриИзменении(Элемент)
	СтрокаТабличнойЧасти = Элементы.ПереченьНоменклатуры.ТекущиеДанные;
	РаботаСДокументами.РасчитатьСумму(СтрокаТабличнойЧасти);
КонецПроцедуры

&НаКлиенте
Процедура ПереченьНоменклатурыЦенаПриИзменении(Элемент)
	СтрокаТабличнойЧасти = Элементы.ПереченьНоменклатуры.ТекущиеДанные;
	РаботаСДокументами.РасчитатьСумму(СтрокаТабличнойЧасти);
КонецПроцедуры

&НаКлиенте
Процедура ПереченьНоменклатурыСуммаПриИзменении(Элемент)
	СтрокаТабличнойЧасти = Элементы.ПереченьНоменклатуры.ТекущиеДанные;
	СтрокаТабличнойЧасти.Цена = СтрокаТабличнойЧасти.Сумма / СтрокаТабличнойЧасти.Количество;
КонецПроцедуры

&НаКлиенте
Процедура ПереченьНоменклатурыНоменклатураПриИзменении(Элемент)
СтрокаТабличнойЧасти = Элементы.ПереченьНоменклатуры.ТекущиеДанные;
СтрокаТабличнойЧасти.Цена = РаботаСоСправочниками.РозничнаяЦена(Объект.НачалоПриема,СтрокаТабличнойЧасти.Номенклатура);
РаботаСДокументами.РасчитатьСумму(СтрокаТабличнойЧасти);
КонецПроцедуры


&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	//Индекс = ПроверяемыеРеквизиты.Найти("ПереченьНоменклатуры.НаборСвойств");
	//Если Индекс <> Неопределено Тогда
	//	ПроверяемыеРеквизиты.Удалить(Индекс);
	//
	//КонецЕсли;
	//Индекс = 0; 
	//
	//Для Каждого ТекСтрокаПереченьНоменклатуры Из ПереченьНоменклатуры Цикл
	//	Если ТекСтрокаПереченьНоменклатуры.Номенклатура.ВидНоменклатуры = Перечисления.ВидыНоменклатуры.Материал Тогда
	//		Если Не ЗначениеЗаполнено(ТекСтрокаПереченьНоменклатуры.НаборСвойств) Тогда
	//			Сообщение = Новый СообщениеПользователю();
	//			Сообщение.Текст = "В строке " + Строка(Индекс+1) + " списка Перечень номенклатуры не заполнена колонка Набор свойств";
	//			Сообщение.Поле = "ПереченьНоменклатуры[" + Строка(Индекс) + "].НаборСвойств";
	//			Сообщение.УстановитьДанные(ЭтотОбъект);
	//			Сообщение.Сообщить(); 
	//
	//			Отказ = Истина; 
	//			
	//		КонецЕсли;
	//		
	//	КонецЕсли;    
	//	
	//	Индекс = Индекс + 1;
	//	
	//КонецЦикла;
	
КонецПроцедуры

