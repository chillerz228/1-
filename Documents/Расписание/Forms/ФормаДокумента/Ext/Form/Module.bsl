

//&НаСервере
//Функция ТаблицаРасписаниеУслугаПриИзмененииНаСервере(Элемент)
////	Отбор = Новый Структура;
////	Отбор.Вставить("Услуга",ЭлементУслуга);
////Ресурсы = РегистрыСведений.ВремяПроведенияУслуг.ПолучитьПоследнее(ДатаТек,Отбор);
////	Возврат Ресурсы.Длительность;
//СтруктураОтбора = Новый Структура;
//СтруктураОтбора = ("Услуга", Оюъект.Услуга);
//РезультатОтбора = РегистрыСведений.ВремяПроведенияУслуг.Получить(СтруктураОтбора);
//Возврат РезультатОтбора.Длительность 
//	КонецФункции

//&НаКлиенте
//Процедура ТаблицаРасписаниеУслугаПриИзменении(Элемент)
//	ТекущиеДанные = Элементы.ТаблицаРасписание.ТекущиеДанные;
//	//ТекущиеДанные.Длительность = ТаблицаРасписаниеУслугаПриИзмененииНаСервере (Объект.Дата, ТекущиеДанные.Услуга);
//	ТекущиеДанные.Длительность = ТаблицаРасписаниеУслугаПриИзмененииНаСервере ();
//	
//КонецПроцедуры

&НаСервереБезКонтекста
Функция ВызовРегистраДлительности(ДатаТек,ЭлементУслуги)Экспорт
	Отбор = Новый Структура;
	Отбор.Вставить("Услуга",ЭлементУслуги);
	Ресурсы = РегистрыСведений.ВремяПроведенияУслуг.ПолучитьПоследнее(ДатаТек,Отбор);
	Возврат Ресурсы.Длительность; 
	
КонецФункции

&НаКлиенте
Процедура ТаблицаРасписаниеУслугаПриИзменении(Элемент)
	ТекущиеДанные = Элементы.ТаблицаРасписание.ТекущиеДанные;
	ТекущиеДанные.Длительность = ВызовРегистраДлительности(Объект.Дата, ТекущиеДанные.Услуга); 
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаРасписаниеДатаНачалаПриемаПриИзменении(Элемент)
ТекущиеДанные = Элементы.ТаблицаРасписание.ТекущиеДанные;
     РассчетВремени();
            ТекущиеДанные.ВремяОкончанияПриема = ТекущиеДанные.ВремяНачалаПриема + (ТекущиеДанные.Длительность * 3600);  
			
КонецПроцедуры

&НаКлиенте
Процедура РассчетВремени()
		ТекущиеДанные = Элементы.ТаблицаРасписание.ТекущиеДанные;
 ТекущиеДанные.ВремяОкончанияПриема = ТекущиеДанные.ВремяНачалаПриема + (ТекущиеДанные.Длительность * 3600);
	КонецПроцедуры

&НаКлиенте
	Процедура ТаблицаРасписаниеДатаОкончанияПриемаПриИзменении(Элемент)
	ТекущиеДанные = Элементы.ТаблицаРасписание.ТекущиеДанные;			
       ТекущиеДанные.ВремяОкончанияПриема = ТекущиеДанные.ВремяНачалаПриема + (ТекущиеДанные.Длительность * 3600);
	РассчетВремени();
	КонецПроцедуры

&НаКлиенте
	Процедура ТаблицаРасписаниеДлительностьПриемаПриИзменении(Элемент)
	РассчетВремени();
	проверка();
КонецПроцедуры

&НаКлиенте  
Процедура проверка()
	ТекущиеДанные = Элементы.ТаблицаРасписание.ТекущиеДанные;
	Для каждого строка из объект.ТаблицаРасписание цикл
	Если  Не Строка.Услуга  = ТекущиеДанные.Услуга и Строка.Кабинет = ТекущиеДанные.Кабинет и не ТекущиеДанные.НомерСтроки = Строка.НомерСтроки тогда
			Если Строка.ВремяНачалаПриема < ТекущиеДанные.ВремяНачалаПриема и Строка.ВремяОкончанияПриема > ТекущиеДанные.ВремяОкончанияПриема тогда 
				Сообщить("Данный период времени занят: измените время начала и время окончания приема");
				ТекущиеДанные.ВремяНачалаПриема = Дата('00010101');
				ТекущиеДанные.ВремяОкончанияПриема = Дата('00010101');
				ТекущиеДанные.Длительность = 0;
			ИначеЕсли  Не Строка.Услуга  = ТекущиеДанные.Услуга и Строка.Кабинет = ТекущиеДанные.Кабинет и не ТекущиеДанные.НомерСтроки = Строка.НомерСтроки тогда
				Сообщить("Этот период уже занят: Услуга " + Строка.Услуга + " Кабинет " + Строка.Кабинет + " Номер строки " + Строка.НомерСтроки + " Время начала приема " + Строка.ВремяНачалаПриема, + " Время окончания приема " + Строка.ВремяОкончанияПриема);
				ТекущиеДанные.ВремяНачалаПриема = Дата('00010101');
				ТекущиеДанные.ВремяОкончанияПриема = Дата('00010101');
				ТекущиеДанные.Кабинет = ПредопределенноеЗначение("Справочник.Кабинет.ПустаяСсылка");
				ТекущиеДанные.Услуга = ПредопределенноеЗначение("Справочник.Услуги.ПустаяСсылка");
				ТекущиеДанные.Длительность = 0;	
			ИначеЕсли Строка.ВремяНачалаПриема > ТекущиеДанные.ВремяНачалаПриема и Строка.ВремяОкончанияПриема > ТекущиеДанные.ВремяОкончанияПриема тогда
				Сообщить("Данный период времени занят: измените дату начала курса");
				ТекущиеДанные.ВремяНачалаПриема = Дата('00010101');
				ТекущиеДанные.ВремяОкончанияПриема = Дата('00010101');
				ТекущиеДанные.Длительность = 0;
			ИначеЕсли  Строка.ВремяНачалаПриема < ТекущиеДанные.ВремяНачалаПриема и Строка.ВремяОкончанияПриема < ТекущиеДанные.ВремяОкончанияПриема тогда
				Сообщить("Данный период времени занят: измените дату окончания курса");
				ТекущиеДанные.ВремяНачалаПриема = Дата('00010101');
				ТекущиеДанные.ВремяОкончанияПриема = Дата('00010101');
				ТекущиеДанные.Длительность = 0;
			КонецЕсли;
		ИначеЕсли Строка.Услуга  = ТекущиеДанные.Услуга и Строка.Кабинет = ТекущиеДанные.Кабинет и не ТекущиеДанные.НомерСтроки = Строка.НомерСтроки и строка.ВремяНачалаПриема = ТекущиеДанные.ВремяНачалаПриема и Строка.ВремяОкончанияПриема = ТекущиеДанные.ВремяОкончанияПриема тогда
			Сообщить ("Запись уже существует: Услуга " + Строка.Услуга + " Кабинет " + Строка.Кабинет + " Номер строки " + Строка.НомерСтроки + " Время начала приема " + Строка.ВремяНачалаПриема, + " Время окончания приема " + Строка.ВремяОкончанияПриема);
			ТекущиеДанные.ВремяНачалаПриема = Дата('00010101');
			ТекущиеДанные.ВремяОкончанияПриема = Дата('00010101');
			ТекущиеДанные.Кабинет = ПредопределенноеЗначение("Справочник.Кабинет.ПустаяСсылка");
			ТекущиеДанные.Услуга = ПредопределенноеЗначение("Справочник.Услуга.ПустаяСсылка");
			ТекущиеДанные.Длительность = 0;
		КонецЕсли
	КонецЦикла;
КонецПроцедуры	
	 
